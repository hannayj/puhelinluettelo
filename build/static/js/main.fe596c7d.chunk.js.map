{"version":3,"sources":["services/persons.js","components/Notification.js","components/Numbers.js","components/Filter.js","components/PersonForm.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","notification","className","type","message","Numbers","person","deleteName","name","number","onClick","Filter","props","value","filterName","onChange","handleFilterName","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterName","setNotification","useEffect","personService","notifyWith","setTimeout","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","console","log","nameObject","map","window","confirm","find","p","updatedNumber","returnedInfo","catch","error","returnedPerson","concat","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe596c7d.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react';\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (notification === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={notification.type}>\r\n            {notification.message}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Numbers = ({ person, deleteName }) => {\r\n    //console.log(person)\r\n    return (\r\n        <div>\r\n            <p>{person.name} {person.number}\r\n                <button onClick={deleteName}>Delete</button></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Numbers;","import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input\r\n                value={props.filterName}\r\n                onChange={props.handleFilterName} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.addName}>\r\n                <div>\r\n                    name: <input\r\n                        value={props.newName}\r\n                        onChange={props.handleNameChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input\r\n                        value={props.newNumber}\r\n                        onChange={props.handleNumberChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"sumbit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonForm;","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Numbers from './components/Numbers'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setFilterName] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(data => {\n        setPersons(data)\n      })\n  }, [])\n\n  const notifyWith = (message, type = 'success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 3000)\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    console.log('addname!')\n\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    console.log(nameObject)\n    if (persons.map(person => person.name).includes(newName)) {\n      //console.log('existing name')\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const id = persons.find(p => p.name === nameObject.name).id\n        const person = persons.find(p => p.id === id)\n        const updatedNumber = { ...person, number: newNumber }\n        personService\n          .update(id, updatedNumber)\n          .then(returnedInfo => {\n            setPersons(persons.map(person => person.id !== id ? person : returnedInfo))\n            notifyWith(`Number of ${nameObject.name} updated`)\n            setNewName('')\n            setNewNumber('')\n          }).catch(error => {\n            console.log(error.response.data.error)\n            notifyWith(`${error.response.data.error}`, 'error')\n          })\n      }\n    } else {\n      //console.log('new name')\n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          notifyWith(`Added ${nameObject.name}`)\n          setNewName('')\n          setNewNumber('')\n        }).catch(error => {\n          console.log(error.response.data.error)\n          notifyWith(`${error.response.data.error}`, 'error')\n        })\n    }\n  }\n\n\n  const deleteName = (id, name) => {\n    //console.log(`delete ${id}`)\n    if (window.confirm(`Delete ${name}?`)) {\n      personService\n        .remove(id, name)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`Deleted ${name}`)\n        }).catch(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`${name} had already meen removed`, 'error')\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterName = (event) => {\n    //console.log(event.target.value)\n    setFilterName(event.target.value)\n  }\n\n  const personsToShow = filterName === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter filterName={filterName} handleFilterName={handleFilterName} />\n\n      <h2>Add a new</h2>\n      <PersonForm newName={newName} newNumber={newNumber}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n        addName={addName} />\n\n      <h2>Numbers</h2>\n      {personsToShow.map(person =>\n        <Numbers\n          key={person.name}\n          person={person}\n          deleteName={() => deleteName(person.id, person.name)} />\n      )}\n\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}