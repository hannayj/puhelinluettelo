{"version":3,"sources":["services/persons.js","components/Notification.js","components/Numbers.js","components/Filter.js","components/PersonForm.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","errorMessage","className","Numbers","person","deleteName","name","number","onClick","Filter","props","value","filterName","onChange","handleFilterName","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterName","successMessage","setSuccessMessage","setErrorMessage","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","nameObject","console","log","map","window","confirm","find","p","updatedNumber","returnedInfo","catch","error","setTimeout","returnedPerson","concat","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.792313d5.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react';\r\n\r\nconst Notification = ({ message, errorMessage }) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    if (errorMessage !== null) {\r\n        return (\r\n            <div className='error'>\r\n                {errorMessage}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className='success'>\r\n                {message}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Numbers = ({ person, deleteName }) => {\r\n    //console.log(person)\r\n    return (\r\n        <div>\r\n            <p>{person.name} {person.number}\r\n                <button onClick={deleteName}>Delete</button></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Numbers;","import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input\r\n                value={props.filterName}\r\n                onChange={props.handleFilterName} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.addName}>\r\n                <div>\r\n                    name: <input\r\n                        value={props.newName}\r\n                        onChange={props.handleNameChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input\r\n                        value={props.newNumber}\r\n                        onChange={props.handleNumberChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"sumbit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonForm;","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Numbers from './components/Numbers'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setFilterName] = useState('')\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    console.log(nameObject)\n    if (persons.map(person => person.name).includes(newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const id = persons.find(p => p.name === nameObject.name).id\n        const person = persons.find(p => p.id === id)\n        const updatedNumber = { ...person, number: newNumber }\n        personService\n          .update(id, updatedNumber)\n          .then(returnedInfo => {\n            setPersons(persons.map(person => person.id !== id ? person : returnedInfo))\n          })\n          .catch(error => {\n            setErrorMessage(\n              `Infomation of ${nameObject.name} has already been removed from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 3000)\n            setPersons(persons.filter(p => p.id !== id))\n          })\n        setSuccessMessage(`Number of ${nameObject.name} updated`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 3000)\n      }\n    } else {\n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n        })\n    }\n    setSuccessMessage(`Added ${nameObject.name}`)\n    setTimeout(() => {\n      setSuccessMessage(null)\n    }, 3000)\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deleteName = (id, name) => {\n    //console.log(`delete ${id}`)\n    if (window.confirm(`Delete ${name}?`)) {\n      personService\n        .remove(id, name)\n        .then(\n          setPersons(persons.filter(p => p.id !== id))\n        )\n      setSuccessMessage(`Deleted ${name}`)\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 3000)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterName = (event) => {\n    //console.log(event.target.value)\n    setFilterName(event.target.value)\n  }\n\n  const personsToShow = filterName === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage} errorMessage={errorMessage} />\n      <Filter filterName={filterName} handleFilterName={handleFilterName} />\n\n      <h2>Add a new</h2>\n      <PersonForm newName={newName} newNumber={newNumber}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n        addName={addName} />\n\n      <h2>Numbers</h2>\n      {personsToShow.map(person =>\n        <Numbers\n          key={person.name}\n          person={person}\n          deleteName={() => deleteName(person.id, person.name)} />\n      )}\n\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}